{"ast":null,"code":"export var signIn = function signIn(credentiala) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentiala.email, credentiala.password).then(function () {\n      console.log('success');\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(function (err) {\n      console.log('error');\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err: err\n      });\n    });\n  };\n};\nexport var signOut = function signOut() {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signOut().then(function () {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport var signUp = function signUp(newUser) {\n  return function (dispatch, getState, _ref3) {\n    var gerFirebase = _ref3.gerFirebase,\n        getFirestore = _ref3.getFirestore;\n    var firebase = getFirebase();\n    var firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(function (resp) {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initial: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(function () {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/boriscivcic/Documents/rentCar/src/store/actions/authAction.js"],"names":["signIn","credentiala","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","console","log","type","catch","err","signOut","signUp","newUser","gerFirebase","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstName","lastName","initial"],"mappings":"AAAA,OAAO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,WAAD,EAAiB;AACrC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAyC;AAAA,QAAlBC,WAAkB,QAAlBA,WAAkB;AAC9C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,0BAAhB,CACEN,WAAW,CAACO,KADd,EAEEP,WAAW,CAACQ,QAFd,EAGEC,IAHF,CAGO,YAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAND,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,GAAG,EAAHA;AAAvB,OAAD,CAAR;AACD,KATD;AAUD,GAZD;AAaD,CAdM;AAgBP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,UAACd,QAAD,EAAWC,QAAX,SAAyC;AAAA,QAAlBC,WAAkB,SAAlBA,WAAkB;AAC9C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBU,OAAhB,GAA0BN,IAA1B,CAA+B,YAAM;AACnCR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD;AAGD,GALD;AAMD,CAPM;AASP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAa;AACjC,SAAO,UAAChB,QAAD,EAAWC,QAAX,SAAuD;AAAA,QAAhCgB,WAAgC,SAAhCA,WAAgC;AAAA,QAAnBC,YAAmB,SAAnBA,YAAmB;AAC5D,QAAMf,QAAQ,GAAGD,WAAW,EAA5B;AACA,QAAMiB,SAAS,GAAGD,YAAY,EAA9B;AACAf,IAAAA,QAAQ,CAACC,IAAT,GAAgBgB,8BAAhB,CACEJ,OAAO,CAACV,KADV,EAEEU,OAAO,CAACT,QAFV,EAGEC,IAHF,CAGO,UAACa,IAAD,EAAU;AACf,aAAOF,SAAS,CAACG,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCF,IAAI,CAACG,IAAL,CAAUC,GAA5C,EAAiDC,GAAjD,CAAqD;AAC1DC,QAAAA,SAAS,EAAEX,OAAO,CAACW,SADuC;AAE1DC,QAAAA,QAAQ,EAAEZ,OAAO,CAACY,QAFwC;AAG1DC,QAAAA,OAAO,EAAEb,OAAO,CAACW,SAAR,CAAkB,CAAlB,IAAuBX,OAAO,CAACY,QAAR,CAAiB,CAAjB;AAH0B,OAArD,CAAP;AAKD,KATD,EASGpB,IATH,CASQ,YAAM;AACZR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAXD,EAWGC,KAXH,CAWS,UAAAC,GAAG,EAAI;AACdb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,GAAG,EAAHA;AAAxB,OAAD,CAAR;AACD,KAbD;AAcD,GAjBD;AAkBD,CAnBM","sourcesContent":["export const signIn = (credentiala) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase.auth().signInWithEmailAndPassword(\n      credentiala.email,\n      credentiala.password\n    ).then(() => {\n      console.log('success')\n      dispatch({ type: 'LOGIN_SUCCESS' })\n    }).catch((err) => {\n      console.log('error')\n      dispatch({ type: 'LOGIN_ERROR', err })\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { gerFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initial: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}