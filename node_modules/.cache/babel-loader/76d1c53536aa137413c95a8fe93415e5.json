{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapWithFirebaseAndDispatch = exports.wrapInDispatch = undefined;\n\nvar _mapValues2 = require('lodash/mapValues');\n\nvar _mapValues3 = _interopRequireDefault(_mapValues2);\n\nvar _isObject2 = require('lodash/isObject');\n\nvar _isObject3 = _interopRequireDefault(_isObject2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar wrapInDispatch = exports.wrapInDispatch = function wrapInDispatch(dispatch, _ref) {\n  var ref = _ref.ref,\n      meta = _ref.meta,\n      method = _ref.method,\n      _ref$args = _ref.args,\n      args = _ref$args === undefined ? [] : _ref$args,\n      types = _ref.types;\n\n  var _types = _slicedToArray(types, 3),\n      requestingType = _types[0],\n      successType = _types[1],\n      errorType = _types[2];\n\n  dispatch({\n    type: (0, _isObject3.default)(requestingType) ? requestingType.type : requestingType,\n    meta: meta,\n    payload: (0, _isObject3.default)(requestingType) ? requestingType.payload : {\n      args: args\n    }\n  });\n  return method.apply(undefined, _toConsumableArray(args)).then(function (payload) {\n    dispatch({\n      type: (0, _isObject3.default)(successType) ? successType.type : successType,\n      meta: meta,\n      payload: (0, _isObject3.default)(successType) ? successType.payload : payload\n    });\n    return payload;\n  }).catch(function (err) {\n    dispatch({\n      type: errorType,\n      meta: meta,\n      payload: err\n    });\n    return Promise.reject(err);\n  });\n};\n\nvar createWithFirebaseAndDispatch = function createWithFirebaseAndDispatch(firebase, dispatch, dispatchFirst) {\n  return function (func) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return func.apply(firebase, dispatchFirst ? [dispatch, firebase].concat(args) : [firebase, dispatch].concat(args));\n    };\n  };\n};\n\nvar mapWithFirebaseAndDispatch = exports.mapWithFirebaseAndDispatch = function mapWithFirebaseAndDispatch(firebase, dispatch, actions) {\n  var aliases = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var withFirebaseAndDispatch = createWithFirebaseAndDispatch(firebase, dispatch);\n  return _extends({}, (0, _mapValues3.default)(actions, withFirebaseAndDispatch), aliases.reduce(function (acc, _ref2) {\n    var action = _ref2.action,\n        name = _ref2.name;\n    return _extends({}, acc, _defineProperty({}, name, withFirebaseAndDispatch(action)));\n  }, {}));\n};","map":null,"metadata":{},"sourceType":"script"}