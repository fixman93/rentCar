'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = WithError;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * .rrui__interaction--pointer {
 *   outline: none;
 *   box-shadow: none;
 * }
 * <Interaction><input .../></Interaction>
 * <Interaction><button .../></Interaction>
 */
function WithError(props) {
	var setRef = props.setRef,
	    error = props.error,
	    indicateInvalid = props.indicateInvalid,
	    children = props.children,
	    rest = _objectWithoutProperties(props, ['setRef', 'error', 'indicateInvalid', 'children']);

	return _react2.default.createElement(
		'div',
		_extends({ ref: setRef }, rest),
		children,
		indicateInvalid && error && _react2.default.createElement(
			'div',
			{ className: 'rrui__input-error' },
			error
		)
	);
}

WithError.propTypes = {
	setRef: _propTypes2.default.func,

	// Renders an error message below the `<input/>`
	error: _propTypes2.default.string,

	// Deprecated.
	// If this flag is `true` then the `error` is shown.
	// If this flag is `false` then the `error` is not shown (even if passed).
	indicateInvalid: _propTypes2.default.bool,

	// CSS style object
	style: _propTypes2.default.object,

	// CSS name
	className: _propTypes2.default.string,

	children: _propTypes2.default.node.isRequired
};

WithError.defaultProps = {
	// Deprecated.
	// Show `error` (if passed).
	indicateInvalid: true
};
//# sourceMappingURL=WithError.js.map