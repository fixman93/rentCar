{"version":3,"sources":["../source/DragAndDrop.js"],"names":["getFilesFromEvent","CanDrop","DragAndDrop","DropFiles","node","createRef","dragTargets","setDraggedOver","draggedOver","props","onDragOver","event","preventDefault","stopPropagation","onDragEnter","indexOf","target","push","isDraggingFiles","onDragLeave","filter","_","current","contains","length","onDrop","multiple","files","div","addEventListener","removeEventListener","rest","createElement","ref","Component","propTypes","func","isRequired","bool","supportsMultipleFileUploadOnInputElement","document","dataTransfer","Array","prototype","some","call","types","type","dataTransferItemsList","dt","items","slice","drop","Error","File","Files","FILE","FILES"],"mappings":"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","file":"DragAndDrop.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class DropFiles extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tsetDraggedOver: PropTypes.func,\r\n\t\tonDrop : PropTypes.func.isRequired,\r\n\t\tmultiple : PropTypes.bool\r\n\t}\r\n\r\n\t// state = {\r\n\t// \tisDragging: false\r\n\t// }\r\n\r\n\tnode = React.createRef()\r\n\r\n\t// Copied from:\r\n\t// https://github.com/react-dropzone/react-dropzone/blob/master/src/index.js\r\n\tdragTargets = []\r\n\r\n\tsetDraggedOver = (draggedOver) => {\r\n\t\tconst { setDraggedOver } = this.props\r\n\t\tif (setDraggedOver) {\r\n\t\t\tsetDraggedOver(draggedOver)\r\n\t\t}\r\n\t}\r\n\r\n\t// Must be `preventDefault`-ed for some weird reasons.\r\n\tonDragOver = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tevent.stopPropagation()\r\n\t}\r\n\r\n\t// `event` is always triggered when gragging from another window to the browser window.\r\n\tonDragEnter = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tevent.stopPropagation()\r\n\r\n\t\t// Copied from:\r\n\t\t// https://github.com/react-dropzone/react-dropzone/blob/master/src/index.js\r\n\t\t// Count the dropzone and any children that are entered.\r\n\t\tif (this.dragTargets.indexOf(event.target) === -1) {\r\n\t\t\tthis.dragTargets.push(event.target)\r\n\t\t}\r\n\r\n\t\t// `event.dataTransfer.files` are only accessible on \"drop\" event.\r\n\t\t// `event.dataTransfer.items` are only accessible in Chrome and FireFox while dragging.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/items\r\n\t\tif (isDraggingFiles(event)) {\r\n\t\t\tthis.setDraggedOver(true)\r\n\t\t}\r\n\t}\r\n\r\n\tonDragLeave = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tevent.stopPropagation()\r\n\r\n\t\t// Copied from:\r\n\t\t// https://github.com/react-dropzone/react-dropzone/blob/master/src/index.js\r\n\t\t// Only deactivate once the dropzone and all children have been left.\r\n\t\tthis.dragTargets = this.dragTargets.filter(_ => _ !== event.target && this.node.current.contains(_))\r\n\t\tif (this.dragTargets.length > 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.setDraggedOver(false)\r\n\t}\r\n\r\n\tonDrop = (event) => {\r\n\t\tconst { onDrop, multiple } = this.props\r\n\r\n\t\tevent.preventDefault()\r\n\t\tevent.stopPropagation()\r\n\r\n\t\t// Reset.\r\n\t\tthis.dragTargets = []\r\n\r\n\t\tthis.setDraggedOver(false)\r\n\r\n\t\tconst files = getFilesFromEvent(event)\r\n\t\tif (files.length > 0) {\r\n\t\t\tonDrop(multiple ? files : files[0])\r\n\t\t\t// Not clear why would it be called.\r\n\t\t\t// MDN says it's a \"no-op\".\r\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList/clear\r\n\t\t\t// event.dataTransfer.clearData()\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst div = this.node.current\r\n\t\tdiv.addEventListener('dragenter', this.onDragEnter)\r\n\t\tdiv.addEventListener('dragleave', this.onDragLeave)\r\n\t\tdiv.addEventListener('dragover', this.onDragOver)\r\n\t\tdiv.addEventListener('drop', this.onDrop)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconst div = this.node.current\r\n\t\tdiv.removeEventListener('dragenter', this.onDragEnter)\r\n\t\tdiv.removeEventListener('dragleave', this.onDragLeave)\r\n\t\tdiv.removeEventListener('dragover', this.onDragOver)\r\n\t\tdiv.removeEventListener('drop', this.onDrop)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tonDrop,\r\n\t\t\tsetDraggedOver,\r\n\t\t\tmultiple,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\treturn React.createElement('div', {\r\n\t\t\tref: this.node,\r\n\t\t\t...rest\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Copied from:\r\n// https://github.com/react-dropzone/react-dropzone/blob/master/src/utils/index.js\r\nexport const supportsMultipleFileUploadOnInputElement =\r\n\ttypeof document !== 'undefined' && document && document.createElement\r\n\t\t? 'multiple' in document.createElement('input')\r\n\t\t: true\r\n\r\n// Copied from:\r\n// https://github.com/react-dropzone/react-dropzone/blob/master/src/utils/index.js\r\nfunction isDraggingFiles(event) {\r\n\t// If `event.dataTransfer` is not available then `event.target.files` fallback is used.\r\n\tif (!event.dataTransfer) {\r\n\t\treturn true\r\n\t}\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\r\n\treturn Array.prototype.some.call(\r\n\t\tevent.dataTransfer.types,\r\n\t\ttype => type === 'Files' || type === 'application/x-moz-file'\r\n\t)\r\n}\r\n\r\n// Copied from:\r\n// https://github.com/react-dropzone/react-dropzone/blob/master/src/utils/index.js\r\nexport function getFilesFromEvent(event) {\r\n\tlet dataTransferItemsList = []\r\n\tif (event.dataTransfer) {\r\n\t\tconst dt = event.dataTransfer\r\n\t\t// NOTE: Only the 'drop' event has access to DataTransfer.files,\r\n\t\t// otherwise it will always be empty\r\n\t\tif (dt.files && dt.files.length) {\r\n\t\t\tdataTransferItemsList = dt.files\r\n\t\t} else if (dt.items && dt.items.length) {\r\n\t\t\t// During the drag even the dataTransfer.files is null\r\n\t\t\t// but Chrome implements some drag store, which is accesible via dataTransfer.items\r\n\t\t\tdataTransferItemsList = dt.items\r\n\t\t}\r\n\t} else if (event.target && event.target.files) {\r\n\t\tdataTransferItemsList = event.target.files\r\n\t}\r\n\t// Convert from DataTransferItemsList to the native Array\r\n\treturn Array.prototype.slice.call(dataTransferItemsList)\r\n}\r\n\r\n// // Copied from:\r\n// // https://github.com/react-dropzone/react-dropzone/blob/master/src/utils/index.js\r\n// // Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\r\n// // that MIME type will always be accepted\r\n// function isFileAccepted(file, accept) {\r\n// \treturn this.props.isFileAccepted(file) || (file.type === 'application/x-moz-file' || this.props.isFileTypeAccepted(file))\r\n// }\r\n\r\n// Deprecated.\r\nexport function CanDrop(type, drop)\r\n{\r\n\tthrow new Error('`react-dnd` has been removed from `react-responsive-ui` starting from version `0.14.124` due to being buggy and not supported. `react-dnd` has been replaced with simple native HTML file drag-n-drop. Use `<DropFileUpload/>` and `<DropMultiFileUpload/>` components for file upload instead of `DragAndDrop` and `CanDrop` decorators.')\r\n}\r\n\r\n// Deprecated.\r\nexport function DragAndDrop()\r\n{\r\n\tthrow new Error('`react-dnd` has been removed from `react-responsive-ui` starting from version `0.14.124` due to being buggy and not supported. `react-dnd` has been replaced with simple native HTML file drag-n-drop. `DragAndDrop` decorator is no longer needed and should be removed. Use `<DropFileUpload/>` and `<DropMultiFileUpload/>` components for file upload.')\r\n}\r\n\r\n// Deprecated.\r\n// Native file drag'n'drop (single file)\r\nexport const File = 'File'\r\n\r\n// Deprecated.\r\n// Native file drag'n'drop (multiple files)\r\nexport const Files = 'Files'\r\n\r\n// Deprecated.\r\n// Native file drag'n'drop (single file)\r\nexport const FILE = File\r\n\r\n// Deprecated.\r\n// Native file drag'n'drop (multiple files)\r\nexport const FILES = Files"]}