{"version":3,"sources":["../source/MenuButton.js"],"names":["PureComponent","Component","ContextAwareMenuButton","props","context","registerMenuButton","toggleMenu","menuIsExpanded","MenuButton","onClick","event","preventDefault","storeButtonNode","node","button","unregister","element","link","className","MenuButtonIcon","icon","rest","properties","ref","children","createElement","href","type","propTypes","func","isRequired","bool","string","title","style","object","defaultProps"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;;;;;;;;;AAEA;AACA,IAAMA,gBAAgB,gBAAMA,aAAN,IAAuB,gBAAMC,SAAnD;;AAEA,IAAMC,yBAAyB,SAAzBA,sBAAyB,CAACC,KAAD;AAAA,QAC9B;AAAA,uBAAS,QAAT;AAAA;AACE,YAACC,OAAD;AAAA,UACA,8BAAC,UAAD,eACKD,KADL;AAEC,wBAAoBC,QAAQC,kBAF7B;AAGC,gBAAYD,QAAQE,UAHrB;AAIC,oBAAgBF,QAAQG,cAJzB,IADA;AAAA;AADF,EAD8B;AAAA,CAA/B;;kBAYeL,sB;IAETM,U;;;;;;;;;;;;;;4LA+CLC,O,GAAU,UAACC,KAAD,EACV;AAAA,OACSJ,UADT,GACwB,MAAKH,KAD7B,CACSG,UADT;;AAECI,SAAMC,cAAN;AACAL;AACA,G,QAEDM,e,GAAkB,UAACC,IAAD;AAAA,UAAU,MAAKC,MAAL,GAAcD,IAAxB;AAAA,G;;;;;sCApBlB;AAAA;;AAAA,OACSR,kBADT,GACgC,KAAKF,KADrC,CACSE,kBADT;;;AAGC,QAAKU,UAAL,GAAkBV,mBAAmB;AACpCW,aAAU;AAAA,YAAM,OAAKF,MAAX;AAAA;AAD0B,IAAnB,CAAlB;AAGA;;;yCAGD;AACC,QAAKC,UAAL;AACA;;;2BAYD;AAAA,gBAaG,KAAKZ,KAbR;AAAA,OAGEc,IAHF,UAGEA,IAHF;AAAA,OAIEC,SAJF,UAIEA,SAJF;AAAA,OAKSC,cALT,UAKEC,IALF;AAAA,OAMEb,cANF,UAMEA,cANF;AAAA,OASED,UATF,UASEA,UATF;AAAA,OAUED,kBAVF,UAUEA,kBAVF;AAAA,OAWKgB,IAXL;;AAeC,OAAMC;AACLC,SAAK,KAAKX,eADL;AAELH,aAAS,KAAKA,OAFT;AAGL;AACA;AACA,qBAAiBF,iBAAiB,IAAjB,GAAwB,KALpC,EAK2C;AAChDW,eAAW,0BAAW,oBAAX,EAAiC,eAAjC,EAAkD,mBAAlD,EAAuEA,SAAvE;AANN,MAOFG,IAPE,CAAN;;AAUA,OAAMG,WAAW,8BAAC,cAAD,IAAgB,UAAUjB,cAA1B,GAAjB;;AAEA;AACA,OAAIU,IAAJ,EAAU;AACT,WAAO,gBAAMQ,aAAN,CACN,GADM,eAGFH,UAHE;AAILI,WAAMT;AAJD,QAMNO,QANM,CAAP;AAQA;;AAED;AACA,UAAO,gBAAMC,aAAN,CACN,QADM,eAGFH,UAHE;AAILK,UAAM;AAJD,OAMNH,QANM,CAAP;AAQA;;;;EAzGuBxB,a,UAEjB4B,S,GACP;AACC;AACAvB,qBAAqB,oBAAUwB,IAAV,CAAeC,UAFrC;AAGCxB,aAAa,oBAAUuB,IAAV,CAAeC,UAH7B;AAICvB,iBAAiB,oBAAUwB,IAJ5B,EAIkC;;AAEjC;AACA;AACA;AACA;AACAd,OAAc,oBAAUe,MAVzB;;AAYC;AACAC,QAAc,oBAAUD,MAbzB;;AAeC;AACAZ,OAAc,oBAAUS,IAAV,CAAeC,UAhB9B;;AAkBC;AACAZ,YAAc,oBAAUc,MAnBzB;;AAqBC;AACAE,QAAc,oBAAUC;AAtBzB,C,SAyBOC,Y,GACP;AACChB;AADD,C","file":"MenuButton.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport { Context } from './PageAndMenu'\r\nimport MenuIcon from './MenuIcon'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nconst ContextAwareMenuButton = (props) => (\r\n\t<Context.Consumer>\r\n\t\t{(context) => (\r\n\t\t\t<MenuButton\r\n\t\t\t\t{...props}\r\n\t\t\t\tregisterMenuButton={context.registerMenuButton}\r\n\t\t\t\ttoggleMenu={context.toggleMenu}\r\n\t\t\t\tmenuIsExpanded={context.menuIsExpanded}/>\r\n\t\t)}\r\n\t</Context.Consumer>\r\n)\r\n\r\nexport default ContextAwareMenuButton\r\n\r\nclass MenuButton extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// Context.\r\n\t\tregisterMenuButton : PropTypes.func.isRequired,\r\n\t\ttoggleMenu : PropTypes.func.isRequired,\r\n\t\tmenuIsExpanded : PropTypes.bool, //.isRequired,\r\n\r\n\t\t// A URL of the \"Menu\" page:\r\n\t\t// if a web browser has javascript disabled (e.g. Tor),\r\n\t\t// then the menu button will redirect to this Menu page URL.\r\n\t\t// If not set then won't redirect anywhere.\r\n\t\tlink        : PropTypes.string,\r\n\r\n\t\t// HTML `title` attribute.\r\n\t\ttitle       : PropTypes.string,\r\n\r\n\t\t// Menu button icon component.\r\n\t\ticon        : PropTypes.func.isRequired,\r\n\r\n\t\t// CSS class.\r\n\t\tclassName   : PropTypes.string,\r\n\r\n\t\t// CSS style object.\r\n\t\tstyle       : PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\ticon : MenuIcon\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst { registerMenuButton } = this.props\r\n\r\n\t\tthis.unregister = registerMenuButton({\r\n\t\t\telement : () => this.button\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tthis.unregister()\r\n\t}\r\n\r\n\tonClick = (event) =>\r\n\t{\r\n\t\tconst { toggleMenu } = this.props\r\n\t\tevent.preventDefault()\r\n\t\ttoggleMenu()\r\n\t}\r\n\r\n\tstoreButtonNode = (node) => this.button = node\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tlink,\r\n\t\t\tclassName,\r\n\t\t\ticon : MenuButtonIcon,\r\n\t\t\tmenuIsExpanded,\r\n\r\n\t\t\t// Getting \"rest\" properties.\r\n\t\t\ttoggleMenu,\r\n\t\t\tregisterMenuButton,\r\n\t\t\t...rest\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst properties = {\r\n\t\t\tref: this.storeButtonNode,\r\n\t\t\tonClick: this.onClick,\r\n\t\t\t// 'aria-label': 'Menu',\r\n\t\t\t// 'aria-haspopup': 'menu',\r\n\t\t\t'aria-expanded': menuIsExpanded ? true : false, // can be `undefined` to differentiate between \"has been toggled yet\"/\"has not been toggled yet\" to workaround the CSS animation bug.\r\n\t\t\tclassName: classNames('rrui__button-reset', 'rrui__outline', 'rrui__menu-button', className),\r\n\t\t\t...rest\r\n\t\t}\r\n\r\n\t\tconst children = <MenuButtonIcon expanded={menuIsExpanded}/>\r\n\r\n\t\t// A link.\r\n\t\tif (link) {\r\n\t\t\treturn React.createElement(\r\n\t\t\t\t'a',\r\n\t\t\t\t{\r\n\t\t\t\t\t...properties,\r\n\t\t\t\t\thref: link\r\n\t\t\t\t},\r\n\t\t\t\tchildren\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t// A button.\r\n\t\treturn React.createElement(\r\n\t\t\t'button',\r\n\t\t\t{\r\n\t\t\t\t...properties,\r\n\t\t\t\ttype: 'button'\r\n\t\t\t},\r\n\t\t\tchildren\r\n\t\t)\r\n\t}\r\n}"]}