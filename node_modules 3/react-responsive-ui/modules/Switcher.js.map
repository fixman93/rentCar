{"version":3,"sources":["../source/Switcher.js"],"names":["PureComponent","Component","Switcher","state","focus","button_0","storeContainerComponent","container","_","onKeyDown","event","props","defaultPrevented","input","ctrlKey","altKey","shiftKey","metaKey","onChange","options","keyCode","preventDefault","previous_option_index","previous_focused_option_index","undefined","next_option_index","next_focused_option_index","disabled","indicateInvalid","error","ariaLabel","style","className","map","option","index","render_button","value","selected","first","last","length","ref","isAnythingSelected","chooser","label","i","document","activeElement","getFocusedOptionIndex","propTypes","arrayOf","shape","string","isRequired","name","bool","any","func","object","defaultProps"],"mappings":"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","file":"Switcher.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport { submitFormOnCtrlEnter } from './utility/dom'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class Switcher extends PureComponent\r\n{\r\n\tstate = {}\r\n\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// A list of selectable options\r\n\t\toptions : PropTypes.arrayOf\r\n\t\t(\r\n\t\t\tPropTypes.shape\r\n\t\t\t({\r\n\t\t\t\t// Option value\r\n\t\t\t\tvalue: PropTypes.string.isRequired,\r\n\t\t\t\t// Option label\r\n\t\t\t\tlabel: PropTypes.string.isRequired\r\n\t\t\t})\r\n\t\t)\r\n\t\t.isRequired,\r\n\r\n\t\t// HTML form input `name` attribute\r\n\t\tname         : PropTypes.string,\r\n\r\n\t\t// If `true` then will be disabled\r\n\t\tdisabled     : PropTypes.bool,\r\n\r\n\t\t// The selected option value\r\n\t\tvalue        : PropTypes.any,\r\n\r\n\t\t// Is called when an option is selected\r\n\t\tonChange     : PropTypes.func.isRequired,\r\n\r\n\t\t// `aria-label` attribute.\r\n\t\t// Deprecated, use `aria-label` instead.\r\n\t\tariaLabel    : PropTypes.string,\r\n\r\n\t\t// CSS class\r\n\t\tclassName    : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle        : PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// Show `error` (if passed).\r\n\t\tindicateInvalid : true\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tdisabled,\r\n\t\t\toptions,\r\n\t\t\tindicateInvalid,\r\n\t\t\terror,\r\n\t\t\t// Deprecated, use `aria-label` instead.\r\n\t\t\tariaLabel,\r\n\t\t\tstyle,\r\n\t\t\tclassName\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ this.storeContainerComponent }\r\n\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\tclassName={ classNames('rrui__switcher',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__switcher--disabled' : disabled\r\n\t\t\t\t},\r\n\t\t\t\tclassName) }\r\n\t\t\t\tstyle={ style }>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"rrui__input\"\r\n\t\t\t\t\trole=\"radiogroup\"\r\n\t\t\t\t\taria-label={ this.props['aria-label'] || ariaLabel }\r\n\t\t\t\t\taria-invalid={ indicateInvalid && error ? true : undefined }>\r\n\t\t\t\t\t{ options.map((option, index) => this.render_button(option, index)) }\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{ indicateInvalid && error &&\r\n\t\t\t\t\t<div className=\"rrui__input-error\">\r\n\t\t\t\t\t\t{ error }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender_button(option, index)\r\n\t{\r\n\t\tconst { options, value, disabled } = this.props\r\n\r\n\t\tconst selected = value === option.value\r\n\r\n\t\tconst first = index === 0\r\n\t\tconst last  = index === options.length - 1\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tkey={ option.value }\r\n\t\t\t\tref={ ref => this[`button_${index}`] = ref }\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\trole=\"radio\"\r\n\t\t\t\taria-checked={ selected }\r\n\t\t\t\ttabIndex={ isAnythingSelected(value, options) ? (selected ? 0 : -1) : (first ? 0 : -1) }\r\n\t\t\t\tdisabled={ disabled }\r\n\t\t\t\tonClick={ this.chooser(option.value) }\r\n\t\t\t\tclassName={ classNames\r\n\t\t\t\t(\r\n\t\t\t\t\t'rrui__button-reset',\r\n\t\t\t\t\t'rrui__outline',\r\n\t\t\t\t\t'rrui__switcher__option',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__switcher__option--selected' : selected,\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t'rrui__switcher__option--disabled' : disabled,\r\n\t\t\t\t\t\t// Ordering\r\n\t\t\t\t\t\t'rrui__switcher__option--first'    : first,\r\n\t\t\t\t\t\t'rrui__switcher__option--last'     : last,\r\n\t\t\t\t\t\t'rrui__switcher__option--middle'   : !first && !last\r\n\t\t\t\t\t}\r\n\t\t\t\t) }>\r\n\t\t\t\t{ option.label }\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\t// render_static()\r\n\t// {\r\n\t// \tconst { options } = this.props\r\n\t// \treturn options.map((option, index) => this.render_static_option(option, index))\r\n\t// }\r\n\r\n\t// render_static_option(option, index)\r\n\t// {\r\n\t// \tconst { options, name, value } = this.props\r\n\t//\r\n\t// \tconst first = index === 0\r\n\t// \tconst last  = index === options.length - 1\r\n\t//\r\n\t// \treturn (\r\n\t// \t\t<span\r\n\t// \t\t\tkey={ option.value }\r\n\t// \t\t\tclassName={ classNames('rrui__button-reset', 'rrui__outline', 'rrui__switcher__option',\r\n\t// \t\t\t{\r\n\t// \t\t\t\t'rrui__switcher__option--first'  : first,\r\n\t// \t\t\t\t'rrui__switcher__option--last'   : last,\r\n\t// \t\t\t\t'rrui__switcher__option--middle' : !first && !last\r\n\t// \t\t\t}) }>\r\n\t// \t\t\t<input\r\n\t// \t\t\t\ttype=\"radio\"\r\n\t// \t\t\t\tname={ name }\r\n\t// \t\t\t\tchecked={ value === option.value }/>\r\n\t// \t\t\t{ option.label }\r\n\t// \t\t</span>\r\n\t// \t)\r\n\t// }\r\n\r\n\tchooser(value)\r\n\t{\r\n\t\treturn (event) =>\r\n\t\t{\r\n\t\t\tconst { disabled, onChange } = this.props\r\n\r\n\t\t\tif (disabled) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// Call `onChange` only if `value` did actually change\r\n\t\t\tif (value !== this.props.value) {\r\n\t\t\t\tonChange(value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfocus = () => this.button_0.focus()\r\n\r\n\tstoreContainerComponent = _ => this.container = _\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { onKeyDown } = this.props\r\n\r\n\t\tif (onKeyDown) {\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (submitFormOnCtrlEnter(event, this.input)) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst { onChange, options } = this.props\r\n\r\n\t\tswitch (event.keyCode)\r\n\t\t{\r\n\t\t\t// Focus the previous option (if present) on left arrow.\r\n\t\t\tcase 37:\r\n\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\tconst previous_option_index = this.previous_focused_option_index()\r\n\r\n\t\t\t\tif (previous_option_index !== undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Focus the option <button/> so that\r\n\t\t\t\t\t// a subsequent \"Spacebar\" keyDown\r\n\t\t\t\t\t// doesn't select the previously selected\r\n\t\t\t\t\t// option (e.g. the first one)\r\n\t\t\t\t\tthis[`button_${previous_option_index}`].focus()\r\n\r\n\t\t\t\t\t// // Change the `value`\r\n\t\t\t\t\t// return onChange(options[previous_option_index].value)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\r\n\r\n\t\t\t// Focus the next option (if present) on right arrow.\r\n\t\t\tcase 39:\r\n\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\tconst next_option_index = this.next_focused_option_index()\r\n\r\n\t\t\t\tif (next_option_index !== undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Focus the option <button/> so that\r\n\t\t\t\t\t// a subsequent \"Spacebar\" keyDown\r\n\t\t\t\t\t// doesn't select the previously selected\r\n\t\t\t\t\t// option (e.g. the first one)\r\n\t\t\t\t\tthis[`button_${next_option_index}`].focus()\r\n\r\n\t\t\t\t\t// // Change the `value`\r\n\t\t\t\t\t// return onChange(options[next_option_index].value)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\tgetFocusedOptionIndex()\r\n\t{\r\n\t\tconst { options, value } = this.props\r\n\r\n\t\tlet i = 0\r\n\t\twhile (i < options.length)\r\n\t\t{\r\n\t\t\tif (document.activeElement === this[`button_${i}`]) {\r\n\t\t\t\treturn i\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the previous focused option index (relative to the currently selected option).\r\n\tprevious_focused_option_index()\r\n\t{\r\n\t\tconst i = this.getFocusedOptionIndex()\r\n\t\treturn i === 0 ? i : i - 1\r\n\t}\r\n\r\n\t// Get the next focused option index (relative to the currently selected option).\r\n\tnext_focused_option_index()\r\n\t{\r\n\t\tconst { options } = this.props\r\n\t\tconst i = this.getFocusedOptionIndex()\r\n\t\treturn i === options.length - 1 ? i : i + 1\r\n\t}\r\n}\r\n\r\nfunction isAnythingSelected(value, options) {\r\n\tfor (const option of options) {\r\n\t\tif (option.value === value) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\treturn false\r\n}"]}