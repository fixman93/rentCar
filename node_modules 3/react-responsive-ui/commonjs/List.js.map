{"version":3,"sources":["../source/List.js"],"names":["findItemIndexByValue","PureComponent","Component","List","state","items","props","itemRefs","input","getFocusedItemIndex","focusedItemIndex","clearFocus","focusItem","unfocus","focus","undefined","list","options","onFocusItem","shouldFocus","setState","focusedItemValue","getItemValue","_isMounted","console","error","onKeyDown","event","children","defaultPrevented","ctrlKey","altKey","shiftKey","metaKey","Children","count","keyCode","preventDefault","previousIndex","getPreviousFocusableItemIndex","interaction","nextIndex","getNextFocusableItemIndex","onKeyPress","resetInputTimeout","characters","char","String","fromCharCode","charCode","onInput","clearTimeout","resetInputTimer","setTimeout","resetInput","isInputInProgress","onInputSpacebar","onItemFocus","expandable","onFocusIn","onBlur","blurTimer","result","onFocusOut","isFocused","value","isFocusableItemIndex","index","isFocusableItem","item","isDivider","storeListNode","node","storeItemRef","ref","i","highlightFirstItem","prevProps","prevState","highlightSelectedItem","selectedItemIndex","itemRef","click","length","toArray","findItemIndexByLabel","id","disabled","tabbable","hasOnChange","onChange","onSelectItem","createButtons","className","style","role","map","type","displayName","Error","cloneElement","key","focused","tabIndex","createButton","onItemBlur","hasOnSelectItem","selectedItemValue","propTypes","string","any","func","bool","arrayOf","object","isRequired","number","defaultProps","ListItem","onButtonKeyDown","onMouseDown","shouldCreateButton","isSelectable","onFocus","onClick","onSelect","storeRef","isSelectableItem","icon","isSelected","properties","ItemComponent","itemChildren","label","getItemLabel","unshift","createElement","Item","haveItemsChanged","prevItems","itemLabel","toLowerCase","indexOf","element"],"mappings":"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","file":"List.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport Divider from './Divider'\r\n\r\nimport { submitFormOnCtrlEnter } from './utility/dom'\r\nimport { onBlur, focus } from './utility/focus'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class List extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// (optional) HTML `id` attribute.\r\n\t\t// Can be used for WAI-ARIA stuff.\r\n\t\t// Example: `<input role=\"combobox\"/>` with `aria-owns={listId}`.\r\n\t\tid : PropTypes.string,\r\n\r\n\t\tvalue : PropTypes.any,\r\n\t\tonChange : PropTypes.func,\r\n\r\n\t\t// If a `<List/>` has `onChange` then it wraps `<List.Item/>`s with `<button/>`s.\r\n\t\t// The `onChange` added by `<ExpandableList/>` overrides the original `onChange`.\r\n\t\t// If there was no `onChange` — there will be one.\r\n\t\t// So to retain that info `hasOnChange` property is used as a workaround.\r\n\t\t// `undefined` means \"ignore this property\".\r\n\t\thasOnChange : PropTypes.bool,\r\n\r\n\t\t// If `items` property is supplied then it's used to\r\n\t\t// detect \"on items changed\" event in `getDerivedStateFromProps`.\r\n\t\t// It seems to be the only usage of the `items` property.\r\n\t\titems : PropTypes.arrayOf(PropTypes.object),\r\n\r\n\t\t// Legacy method, use `onChange` instead.\r\n\t\tonSelectItem : PropTypes.func,\r\n\t\thighlightSelectedItem : PropTypes.bool.isRequired,\r\n\r\n\t\tonFocusIn : PropTypes.func,\r\n\t\tonFocusItem : PropTypes.func,\r\n\t\tonKeyDown : PropTypes.func,\r\n\r\n\t\t// ARIA `role` attribute.\r\n\t\trole : PropTypes.string,\r\n\r\n\t\t// If a `<List/>` is `expandable`\r\n\t\t// then it won't be `.rrui__list:not(.rrui__list--focus)`.\r\n\t\t// `.rrui__list:not(.rrui__list--focus)` is only for standalone lists.\r\n\t\texpandable : PropTypes.bool,\r\n\r\n\t\ttabbable : PropTypes.bool.isRequired,\r\n\t\tshouldFocus : PropTypes.bool.isRequired,\r\n\t\thighlightFirstItem : PropTypes.bool.isRequired,\r\n\t\tcreateButtons : PropTypes.bool.isRequired,\r\n\r\n\t\t// For select options list keyboard navigation via typing.\r\n\t\tresetInputTimeout : PropTypes.number.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\ttabbable : true,\r\n\t\tshouldFocus : true,\r\n\t\thighlightFirstItem : false,\r\n\t\tcreateButtons : true,\r\n\t\thighlightSelectedItem : true,\r\n\t\tresetInputTimeout : 1000\r\n\t}\r\n\r\n\tstate = {\r\n\t\titems: this.props.items\r\n\t}\r\n\r\n\t// `ref`s of all items currently rendered.\r\n\titemRefs = []\r\n\r\n\t// For select options list keyboard navigation via typing.\r\n\tinput = ''\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst {\r\n\t\t\thighlightFirstItem\r\n\t\t} = this.props\r\n\r\n\t\tif (highlightFirstItem) {\r\n\t\t\tthis.focusItem(0)\r\n\t\t}\r\n\r\n\t\tthis._isMounted = true\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState)\r\n\t{\r\n\t\tconst {\r\n\t\t\tvalue,\r\n\t\t\titems,\r\n\t\t\tchildren,\r\n\t\t\thighlightSelectedItem,\r\n\t\t\thighlightFirstItem\r\n\t\t} = this.props\r\n\r\n\t\t// If `items` property is supplied\r\n\t\t// then it's used to detect \"on items changed\" event.\r\n\t\tif (prevState.items && prevState.items !== items)\r\n\t\t{\r\n\t\t\tthis.setState({ items })\r\n\t\t\t// `findItemIndexByValue()` must return `undefined` for \"no such item\".\r\n\t\t\tconst selectedItemIndex = highlightSelectedItem ? findItemIndexByValue(value, children) : undefined\r\n\t\t\tthis.focusItem(selectedItemIndex === undefined ? (highlightFirstItem ? 0 : undefined) : selectedItemIndex)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tthis._isMounted = false\r\n\t\tclearTimeout(this.blurTimer)\r\n\t\tclearTimeout(this.resetInputTimer)\r\n\t}\r\n\r\n\tchooseFocusedItem() {\r\n\t\tconst { focusedItemIndex } = this.state\r\n\t\tif (focusedItemIndex !== undefined) {\r\n\t\t\tconst itemRef = this.itemRefs[focusedItemIndex]\r\n\t\t\tif (itemRef.click) {\r\n\t\t\t\titemRef.click()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetFocusedItemIndex = () => this.state.focusedItemIndex\r\n\tclearFocus = () => this.focusItem()\r\n\t// Deprecated method name.\r\n\tunfocus = this.clearFocus\r\n\r\n\t// Focuses the list.\r\n\tfocus = () => {\r\n\t\tconst { focusedItemIndex } = this.state\r\n\t\tif (focusedItemIndex !== undefined) {\r\n\t\t\treturn this.focusItem(focusedItemIndex)\r\n\t\t}\r\n\t\t// // Focus the first focusable list item.\r\n\t\t// this.focusItem(this.getFirstFocusableItemIndex())\r\n\t\tthis.list.focus()\r\n\t}\r\n\r\n\tgetFirstFocusableItemIndex()\r\n\t{\r\n\t\tlet i = 0\r\n\t\twhile (i < this.itemRefs.length) {\r\n\t\t\tif (this.itemRefs[i]) {\r\n\t\t\t\treturn i\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetItemValue(index)\r\n\t{\r\n\t\tconst { children } = this.props\r\n\t\tconst item = React.Children.toArray(children)[index]\r\n\t\treturn item.props.value\r\n\t}\r\n\r\n\t// Can be public API for programmatically focusing a certain `<List.Item/>`.\r\n\tfocusItem = (focusedItemIndex, options = {}) =>\r\n\t{\r\n\t\tconst { onFocusItem, shouldFocus } = this.props\r\n\r\n\t\tif (onFocusItem) {\r\n\t\t\tonFocusItem(focusedItemIndex, options)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\t// Focus the item.\r\n\t\t\tfocusedItemIndex,\r\n\t\t\t// Store the focused item value.\r\n\t\t\t// This is used for cases like autocomplete\r\n\t\t\t// where the list of options changes but\r\n\t\t\t// the focused option stays focused.\r\n\t\t\tfocusedItemValue: focusedItemIndex === undefined ? undefined : this.getItemValue(focusedItemIndex)\r\n\t\t}, () => {\r\n\t\t\t// Actually focus the item.\r\n\t\t\tif (focusedItemIndex !== undefined) {\r\n\t\t\t\tif (shouldFocus && this._isMounted) {\r\n\t\t\t\t\tif (!focus(this.itemRefs[focusedItemIndex])) {\r\n\t\t\t\t\t\tconsole.error(`<List.Item/> #${focusedItemIndex + 1}'s child component doesn't have a \".focus()\" method.`)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { onKeyDown, children } = this.props\r\n\t\tconst { focusedItemIndex } = this.state\r\n\r\n\t\tif (onKeyDown) {\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (submitFormOnCtrlEnter(event, this.input)) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (React.Children.count(children) > 0)\r\n\t\t{\r\n\t\t\tswitch (event.keyCode)\r\n\t\t\t{\r\n\t\t\t\t// \"Up\" arrow.\r\n\t\t\t\t// Select the previous item (if present).\r\n\t\t\t\tcase 38:\r\n\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\tconst previousIndex = this.getPreviousFocusableItemIndex()\r\n\r\n\t\t\t\t\tif (previousIndex !== undefined) {\r\n\t\t\t\t\t\tthis.focusItem(previousIndex, { interaction: true })\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn\r\n\r\n\t\t\t\t// \"Down\" arrow.\r\n\t\t\t\t// Select the next item (if present).\r\n\t\t\t\tcase 40:\r\n\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\tconst nextIndex = this.getNextFocusableItemIndex()\r\n\r\n\t\t\t\t\tif (nextIndex !== undefined) {\r\n\t\t\t\t\t\tthis.focusItem(nextIndex, { interaction: true })\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyPress = (event) => {\r\n\t\tconst { resetInputTimeout } = this.props\r\n\t\tconst characters = event.char || String.fromCharCode(event.charCode)\r\n\t\tif (characters) {\r\n\t\t\tthis.input += characters\r\n\t\t\tthis.onInput()\r\n\t\t\tclearTimeout(this.resetInputTimer)\r\n\t\t\tthis.resetInputTimer = setTimeout(this.resetInput, resetInputTimeout)\r\n\t\t}\r\n\t}\r\n\r\n\tonInput() {\r\n\t\tconst { children } = this.props\r\n\t\tconst index = findItemIndexByLabel(this.input, children)\r\n\t\tif (index !== undefined) {\r\n\t\t\tthis.focusItem(index)\r\n\t\t}\r\n\t}\r\n\r\n\tresetInput = () => this.input = ''\r\n\tisInputInProgress = () => this.input !== ''\r\n\r\n\tonInputSpacebar = () => {\r\n\t\tif (this.input) {\r\n\t\t\tthis.input += ' '\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the previous option (relative to the currently focused option)\r\n\tgetPreviousFocusableItemIndex()\r\n\t{\r\n\t\tconst { children } = this.props\r\n\t\tlet { focusedItemIndex } = this.state\r\n\r\n\t\tif (focusedItemIndex === undefined) {\r\n\t\t\tfocusedItemIndex = React.Children.count(children)\r\n\t\t}\r\n\r\n\t\twhile (focusedItemIndex > 0) {\r\n\t\t\tfocusedItemIndex--\r\n\t\t\tif (this.isFocusableItemIndex(focusedItemIndex)) {\r\n\t\t\t\treturn focusedItemIndex\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the next option (relative to the currently focused option)\r\n\tgetNextFocusableItemIndex()\r\n\t{\r\n\t\tconst { children } = this.props\r\n\t\tlet { focusedItemIndex } = this.state\r\n\r\n\t\tif (focusedItemIndex === undefined) {\r\n\t\t\tfocusedItemIndex = -1\r\n\t\t}\r\n\r\n\t\twhile (focusedItemIndex < React.Children.count(children) - 1) {\r\n\t\t\tfocusedItemIndex++\r\n\t\t\tif (this.isFocusableItemIndex(focusedItemIndex)) {\r\n\t\t\t\treturn focusedItemIndex\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonItemFocus = (event) => {\r\n\t\tconst { expandable } = this.props\r\n\t\tif (expandable) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.onFocusIn()\r\n\t}\r\n\r\n\tonBlur = (event) => {\r\n\t\tconst { expandable } = this.props\r\n\t\tif (expandable) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tclearTimeout(this.blurTimer)\r\n\t\tconst result = onBlur(event, this.onFocusOut, () => this.list)\r\n\t\tif (typeof result === 'number') {\r\n\t\t\tthis.blurTimer = result\r\n\t\t}\r\n\t}\r\n\r\n\tonFocusIn = () => {\r\n\t\tconst { onFocusIn } = this.props\r\n\t\tif (onFocusIn) {\r\n\t\t\tonFocusIn()\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisFocused: true\r\n\t\t})\r\n\t}\r\n\r\n\tonFocusOut = () => {\r\n\t\tconst { value } = this.props\r\n\t\tif (value === undefined) {\r\n\t\t\tthis.clearFocus()\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisFocused: false\r\n\t\t})\r\n\t}\r\n\r\n\tisFocusableItemIndex = (index) => this.itemRefs[index] !== undefined\r\n\r\n\tisFocusableItem = (item) => !isDivider(item)\r\n\r\n\t// `this.list` is also being accessed from `<ScrollableList/>`.\r\n\tstoreListNode = (node) => this.list = node\r\n\r\n\tstoreItemRef = (ref, i) => this.itemRefs[i] = ref\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\texpandable,\r\n\t\t\tdisabled,\r\n\t\t\ttabbable,\r\n\t\t\tvalue,\r\n\t\t\thasOnChange,\r\n\t\t\tonChange,\r\n\t\t\t// `onSelectItem` is deprecated, use `onChange` instead.\r\n\t\t\tonSelectItem,\r\n\t\t\thighlightSelectedItem,\r\n\t\t\tcreateButtons,\r\n\t\t\tclassName,\r\n\t\t\tstyle,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet { role } = this.props\r\n\r\n\t\tconst {\r\n\t\t\tfocusedItemIndex,\r\n\t\t\tisFocused\r\n\t\t} = this.state\r\n\r\n\t\t// ARIA (accessibility) roles info:\r\n\t\t// https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\r\n\t\tif (!role && (onChange || onSelectItem)) {\r\n\t\t\trole = 'listbox'\r\n\t\t}\r\n\r\n\t\t// if (this.props['aria-hidden']) {\r\n\t\t// \trole = undefined\r\n\t\t// }\r\n\r\n\t\t// `tabIndex={ -1 }` makes the `<ul/>` focusable.\r\n\t\t// So that `<Expandable/>` doesn't collapse on click inside it (top, bottom).\r\n\r\n\t\treturn (\r\n\t\t\t<ul\r\n\t\t\t\tref={ this.storeListNode }\r\n\t\t\t\tid={ id }\r\n\t\t\t\trole={ role }\r\n\t\t\t\taria-label={ this.props['aria-label'] }\r\n\t\t\t\taria-hidden={ this.props['aria-hidden'] }\r\n\t\t\t\taria-required={ this.props['aria-required'] }\r\n\t\t\t\taria-invalid={ this.props['aria-invalid'] }\r\n\t\t\t\tonFocus={ this.onFocusIn }\r\n\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\tonKeyPress={ this.onKeyPress }\r\n\t\t\t\ttabIndex={ -1 }\r\n\t\t\t\tstyle={ style }\r\n\t\t\t\tclassName={ classNames(className, 'rrui__outline', 'rrui__list', {\r\n\t\t\t\t\t'rrui__list--focus': isFocused\r\n\t\t\t\t}) }>\r\n\r\n\t\t\t\t{ React.Children.map(children, (item, i) =>\r\n\t\t\t\t{\r\n\t\t\t\t\t// Workaround for `react-hot-loader`.\r\n\t\t\t\t\t// https://github.com/gaearon/react-hot-loader#checking-element-types\r\n\t\t\t\t\tif (item.type.displayName !== 'ListItem') {\r\n\t\t\t\t\t\tthrow new Error(`Only <List.Item/>s can be placed inside a <List/> (and remove any whitespace).`)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn React.cloneElement(item,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey       : i,\r\n\t\t\t\t\t\tindex     : i,\r\n\t\t\t\t\t\titemRef   : this.isFocusableItem(item) ? this.storeItemRef : undefined,\r\n\t\t\t\t\t\trole      : role === 'listbox' ? 'option' : item.props.role,\r\n\t\t\t\t\t\tfocus     : this.focusItem,\r\n\t\t\t\t\t\tfocused   : (expandable || isFocused) && focusedItemIndex === i,\r\n\t\t\t\t\t\tdisabled  : disabled || item.props.disabled,\r\n\t\t\t\t\t\ttabIndex  : tabbable && (focusedItemIndex === undefined ? i === 0 : i === focusedItemIndex) ? 0 : -1,\r\n\t\t\t\t\t\tcreateButton : createButtons,\r\n\t\t\t\t\t\tisInputInProgress : this.isInputInProgress,\r\n\t\t\t\t\t\tonInputSpacebar : this.onInputSpacebar,\r\n\t\t\t\t\t\tonItemFocus : this.onItemFocus,\r\n\t\t\t\t\t\tonItemBlur : this.onBlur,\r\n\t\t\t\t\t\tonSelectItem : onChange || onSelectItem,\r\n\t\t\t\t\t\thasOnSelectItem : hasOnChange,\r\n\t\t\t\t\t\tselectedItemValue : value,\r\n\t\t\t\t\t\thighlightSelectedItem : (onChange || onSelectItem) && highlightSelectedItem\r\n\t\t\t\t\t})\r\n\t\t\t\t}) }\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class ListItem extends React.Component\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// (optional) HTML `id` attribute.\r\n\t\t// Can be used for WAI-ARIA stuff.\r\n\t\t// Example: `<input role=\"combobox\"/>` with `aria-activedescendant={focusedListItemId}`.\r\n\t\tid : PropTypes.string,\r\n\r\n\t\tvalue : PropTypes.any,\r\n\t\tindex : PropTypes.number,\r\n\t\tfocused : PropTypes.bool,\r\n\t\tonClick : PropTypes.func,\r\n\t\t// `onSelect` is deprecated, use `onClick` instead.\r\n\t\tonSelect : PropTypes.func,\r\n\t\tonSelectItem : PropTypes.func,\r\n\t\t// If a `<List/>` has `onChange` then it wraps `<List.Item/>`s with `<button/>`s.\r\n\t\t// The `onChange` added by `<ExpandableList/>` overrides the original `onChange`.\r\n\t\t// If there was no `onChange` — there will be one.\r\n\t\t// So to retain that info `hasOnChange` property is used as a workaround.\r\n\t\t// `undefined` means \"ignore this property\".\r\n\t\thasOnSelectItem : PropTypes.bool,\r\n\t\tselectedItemValue : PropTypes.any,\r\n\t\thighlightSelectedItem : PropTypes.bool,\r\n\t\tcreateButton : PropTypes.bool,\r\n\t\t// Deprecated. Use `createButton` instead.\r\n\t\tshouldCreateButton : PropTypes.bool,\r\n\t\t// The button won't be pressed on \"Space\" key\r\n\t\t// if the user is currently typing.\r\n\t\tisInputInProgress : PropTypes.func,\r\n\t\tonInputSpacebar : PropTypes.func\r\n\t}\r\n\r\n\tonButtonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { isInputInProgress, onInputSpacebar } = this.props\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tswitch (event.keyCode) {\r\n\t\t\t// \"Spacebar\".\r\n\t\t\tcase 32:\r\n\t\t\t\t// If the user is currently typing.\r\n\t\t\t\tif (isInputInProgress()) {\r\n\t\t\t\t\t// Don't press the option button.\r\n\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\t// Append space character.\r\n\t\t\t\t\tonInputSpacebar()\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseDown = (event) =>\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tvalue,\r\n\t\t\tindex,\r\n\t\t\tfocus,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// If `<List.Item/>` child element gets wrapped in a `<button/>`\r\n\t\t// then call `onMouseDown` defined on the `<List.Item/>`.\r\n\t\t// If `<List.Item/>` child element doesn't get wrapped in a `<button/>`\r\n\t\t// then manually call `onMouseDown` defined on the `<List.Item/>` child element\r\n\t\t// because `onMouseDown` gets overridden for `<List.Item/>` child element.\r\n\r\n\t\tconst onMouseDown = this.shouldCreateButton() ? this.props.onMouseDown : children.props.onMouseDown\r\n\r\n\t\t// Without this Safari (both mobile and desktop)\r\n\t\t// won't select any item in an expanded list\r\n\t\t// because it will collapse the list immediately\r\n\t\t// on `mouseDown` due to `blur` event being fired.\r\n\t\tevent.preventDefault()\r\n\r\n\t\tif (this.isSelectable()) {\r\n\t\t\tfocus(index)\r\n\t\t}\r\n\r\n\t\tif (onMouseDown) {\r\n\t\t\tonMouseDown(event)\r\n\t\t}\r\n\t}\r\n\r\n\tonFocus = (event) =>\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tfocus,\r\n\t\t\tindex,\r\n\t\t\tonItemFocus,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// If `<List.Item/>` child element gets wrapped in a `<button/>`\r\n\t\t// then call `onFocus` defined on the `<List.Item/>`.\r\n\t\t// If `<List.Item/>` child element doesn't get wrapped in a `<button/>`\r\n\t\t// then manually call `onFocus` defined on the `<List.Item/>` child element\r\n\t\t// because `onFocus` gets overridden for `<List.Item/>` child element.\r\n\r\n\t\tconst onFocus = this.shouldCreateButton() ? this.props.onFocus : children.props.onFocus\r\n\r\n\t\tif (this.isSelectable()) {\r\n\t\t\tfocus(index)\r\n\t\t}\r\n\r\n\t\tif (onFocus) {\r\n\t\t\tonFocus(event)\r\n\t\t}\r\n\r\n\t\tif (onItemFocus) {\r\n\t\t\tonItemFocus(event)\r\n\t\t}\r\n\t}\r\n\r\n\tonBlur = (event) =>\r\n\t{\r\n\t\tconst { onItemBlur, children } = this.props\r\n\r\n\t\t// If `<List.Item/>` child element gets wrapped in a `<button/>`\r\n\t\t// then call `onBlur` defined on the `<List.Item/>`.\r\n\t\t// If `<List.Item/>` child element doesn't get wrapped in a `<button/>`\r\n\t\t// then manually call `onFocus` defined on the `<List.Item/>` child element\r\n\t\t// because `onBlur` gets overridden for `<List.Item/>` child element.\r\n\r\n\t\tconst onBlur = this.shouldCreateButton() ? this.props.onBlur : children.props.onBlur\r\n\r\n\t\tif (onBlur) {\r\n\t\t\tonBlur(event)\r\n\t\t}\r\n\r\n\t\tif (onItemBlur) {\r\n\t\t\tonItemBlur(event)\r\n\t\t}\r\n\t}\r\n\r\n\tonClick = (event) =>\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tonClick,\r\n\t\t\tonSelect,\r\n\t\t\tonSelectItem,\r\n\t\t\tindex,\r\n\t\t\tvalue,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// If `<List.Item/>` child element gets wrapped in a `<button/>`\r\n\t\t// then call `onClick` defined on the `<List.Item/>`.\r\n\t\t// If `<List.Item/>` child element doesn't get wrapped in a `<button/>`\r\n\t\t// then manually call `onClick` defined on the `<List.Item/>` child element\r\n\t\t// because `onClick` gets overridden for `<List.Item/>` child element,\r\n\t\t// and also call `onClick` defined on the `<List.Item/>` (if any).\r\n\r\n\t\tif (onClick) {\r\n\t\t\tonClick(event)\r\n\t\t}\r\n\r\n\t\tif (!this.shouldCreateButton()) {\r\n\t\t\t// Since `onClick` gets overridden\r\n\t\t\t// for `<List.Item/>` child element\r\n\t\t\t// call its original `onClick` manually here.\r\n\t\t\tif (children.props.onClick) {\r\n\t\t\t\tchildren.props.onClick(event)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isSelectable())\r\n\t\t{\r\n\t\t\tif (onSelect) {\r\n\t\t\t\tonSelect(value, index)\r\n\t\t\t}\r\n\t\t\tif (onSelectItem) {\r\n\t\t\t\tonSelectItem(value, index)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisSelectable()\r\n\t{\r\n\t\treturn isSelectableItem(this)\r\n\t}\r\n\r\n\t// Perhaps this is called by `focus()` utility function.\r\n\t// Something like: `focus(this.itemRefs[i])`.\r\n\tfocus = () =>\r\n\t{\r\n\t\tconst { children } = this.props\r\n\t\tfocus(React.Children.toArray(children)[0])\r\n\t}\r\n\r\n\tstoreRef = (ref) =>\r\n\t{\r\n\t\tconst { itemRef, index } = this.props\r\n\r\n\t\tif (itemRef) {\r\n\t\t\titemRef(ref, index)\r\n\t\t}\r\n\t}\r\n\r\n\tshouldCreateButton()\r\n\t{\r\n\t\tconst {\r\n\t\t\tonClick,\r\n\t\t\tonSelect,\r\n\t\t\tonSelectItem,\r\n\t\t\thasOnSelectItem,\r\n\t\t\tcreateButton,\r\n\t\t\t// Deprecated. Use `createButton` instead.\r\n\t\t\tshouldCreateButton\r\n\t\t} = this.props\r\n\r\n\t\treturn this.isSelectable() && (\r\n\t\t\tonClick ||\r\n\t\t\tonSelect ||\r\n\t\t\t(\r\n\t\t\t\tonSelectItem &&\r\n\t\t\t\t(hasOnSelectItem === undefined ? true : hasOnSelectItem) &&\r\n\t\t\t\t(createButton || shouldCreateButton)\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tvalue,\r\n\t\t\ticon,\r\n\t\t\trole,\r\n\t\t\tfocused,\r\n\t\t\tdisabled,\r\n\t\t\tclassName,\r\n\t\t\ttabIndex,\r\n\t\t\thighlightSelectedItem,\r\n\t\t\tselectedItemValue,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// Throws an error for some weird reason.\r\n\t\t// React.Children.only(children)\r\n\r\n\t\tif (React.Children.count(children) !== 1) {\r\n\t\t\tthrow new Error(`Each <List.Item/> must have a single child (and remove any whitespace).`)\r\n\t\t}\r\n\r\n\t\tconst isSelected = this.shouldCreateButton() && value === selectedItemValue\r\n\r\n\t\tconst properties =\r\n\t\t{\r\n\t\t\tref          : this.storeRef,\r\n\t\t\tonMouseDown  : this.onMouseDown,\r\n\t\t\tonClick      : this.onClick,\r\n\t\t\tonFocus      : this.onFocus,\r\n\t\t\tonBlur       : this.onBlur,\r\n\t\t\tclassName    : classNames\r\n\t\t\t(\r\n\t\t\t\tclassName,\r\n\t\t\t\t'rrui__list__item',\r\n\t\t\t\t{\r\n\t\t\t\t\t/* `--focused` modifier is deprecated, use `--focus` instead. */\r\n\t\t\t\t\t'rrui__list__item--focused'  : focused,\r\n\t\t\t\t\t'rrui__list__item--focus'    : focused,\r\n\t\t\t\t\t'rrui__list__item--selected' : isSelected && highlightSelectedItem,\r\n\t\t\t\t\t'rrui__list__item--disabled' : disabled,\r\n\t\t\t\t\t'rrui__list__item--divider'  : isDivider(children)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (id !== undefined) {\r\n\t\t\tproperties.id = id\r\n\t\t}\r\n\r\n\t\tif (tabIndex !== undefined) {\r\n\t\t\tproperties.tabIndex = tabIndex\r\n\t\t}\r\n\r\n\t\tlet ItemComponent\r\n\t\tlet itemChildren\r\n\t\tlet label\r\n\r\n\t\tif (this.shouldCreateButton())\r\n\t\t{\r\n\t\t\tItemComponent = 'button'\r\n\t\t\tlabel = getItemLabel(this)\r\n\t\t\tproperties.type = 'button'\r\n\t\t\tproperties.role = role\r\n\t\t\tproperties['aria-selected'] = isSelected\r\n\t\t\tproperties['aria-label'] = this.props.label || (typeof children !== 'string' && children && children.props ? children.props['aria-label'] : undefined)\r\n\t\t\tproperties.disabled = disabled\r\n\t\t\tproperties.onKeyDown = this.onButtonKeyDown\r\n\t\t\tproperties.className = classNames(\r\n\t\t\t\tproperties.className,\r\n\t\t\t\t'rrui__button-reset',\r\n\t\t\t\t'rrui__outline',\r\n\t\t\t\t'rrui__list__item--button'\r\n\t\t\t)\r\n\r\n\t\t\t// Replace `itemChildren` array with `<React.Fragment/>`\r\n\t\t\t// in some future when React >= 16.2.0 is common.\r\n\t\t\t//\r\n\t\t\t// <React.Fragment>\r\n\t\t\t// \t{/* Icon. */}\r\n\t\t\t// \t{ icon &&\r\n\t\t\t// \t\t<div className=\"rrui__list__item-icon\">\r\n\t\t\t// \t\t\t{ React.createElement(icon, { value, label }) }\r\n\t\t\t// \t\t</div>\r\n\t\t\t// \t}\r\n\t\t\t//\r\n\t\t\t// \t{/* Label (or content). */}\r\n\t\t\t// \t{ children }\r\n\t\t\t// </React.Fragment>\r\n\r\n\t\t\t// Label (or content).\r\n\t\t\titemChildren = React.Children.toArray(children)\r\n\r\n\t\t\t// Icon.\r\n\t\t\tif (icon)\r\n\t\t\t{\r\n\t\t\t\titemChildren.unshift((\r\n\t\t\t\t\t<span key=\"icon\" aria-hidden className=\"rrui__list__item-icon\">\r\n\t\t\t\t\t\t{ React.createElement(icon, { value, label }) }\r\n\t\t\t\t\t</span>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Don't overwrite `className` already defined on the `children`.\r\n\t\t\tproperties.className = classNames(properties.className, children.props && children.props.className)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\trole={this.shouldCreateButton() || isDivider(children) ? 'presentation' : role}\r\n\t\t\t\taria-selected={this.shouldCreateButton() ? undefined : (role && role !== 'presentation' ? isSelected : undefined)}\r\n\t\t\t\taria-label={this.shouldCreateButton() ? undefined : label}\r\n\t\t\t\tclassName=\"rrui__list__list-item\">\r\n\t\t\t\t{ ItemComponent && React.createElement(ItemComponent, properties, itemChildren) }\r\n\t\t\t\t{ !ItemComponent && React.cloneElement(children, properties) }\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// Workaround for `react-hot-loader`.\r\n// https://github.com/gaearon/react-hot-loader#checking-element-types\r\nListItem.displayName = 'ListItem'\r\n\r\nList.Item = ListItem\r\n\r\nfunction haveItemsChanged(props, prevProps)\r\n{\r\n\tconst items     = React.Children.toArray(props.children)\r\n\tconst prevItems = React.Children.toArray(prevProps.children)\r\n\r\n\tif (items.length !== prevItems.length) {\r\n\t\treturn true\r\n\t}\r\n\r\n\tlet i = 0\r\n\twhile (i < items.length)\r\n\t{\r\n\t\tif (items[i].props.value !== prevItems[i].props.value) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn false\r\n}\r\n\r\nexport function findItemIndexByValue(value, children)\r\n{\r\n\tconst items = React.Children.toArray(children)\r\n\r\n\tlet i = 0\r\n\tfor (const item of items)\r\n\t{\r\n\t\tif (isSelectableItem(item) && item.props.value === value) {\r\n\t\t\treturn i\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}\r\n\r\nfunction findItemIndexByLabel(value, children)\r\n{\r\n\tconst items = React.Children.toArray(children)\r\n\r\n\tlet i = 0\r\n\tfor (const item of items)\r\n\t{\r\n\t\tif (isSelectableItem(item)) {\r\n\t\t\tconst itemLabel = getItemLabel(item)\r\n\t\t\tif (itemLabel && itemLabel.toLowerCase().indexOf(value.toLowerCase()) === 0) {\r\n\t\t\t\treturn i\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}\r\n\r\nfunction getItemLabel(item) {\r\n\treturn item.props.label || (typeof item.props.children === 'string' ? item.props.children : undefined)\r\n}\r\n\r\nfunction isSelectableItem(item) {\r\n\treturn item.props.children && !isDivider(item.props.children)\r\n}\r\n\r\nfunction isDivider(element) {\r\n\t// Workaround for `react-hot-loader`.\r\n\t// https://github.com/gaearon/react-hot-loader#checking-element-types\r\n\treturn element.type && element.type.displayName === 'Divider'\r\n}"]}