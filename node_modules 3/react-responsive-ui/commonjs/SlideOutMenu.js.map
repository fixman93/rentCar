{"version":3,"sources":["../source/SlideOutMenu.js"],"names":["Context","PureComponent","Component","ContextAwareSlideoutMenu","slideOutMenu","show","current","hide","props","context","registerMenu","toggleMenu","getTogglerNode","SlideoutMenu","state","container","toggle","onAfterToggle","onCollapse","onExpand","undefined","setState","onKeyDown","event","ctrlKey","altKey","shiftKey","metaKey","keyCode","preventDefault","onBlur","onFocusOutRef","storeOnFocusOutRef","ref","getContainerNode","onFocusOut","window","rruiCollapseOnFocusOut","menuRef","unregister","isShown","element","menu","anchor","fullscreen","className","children","rest","propTypes","oneOf","isRequired","bool","object","func","style","string","defaultProps"],"mappings":"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","file":"SlideOutMenu.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport createRef from 'react-create-ref'\r\nimport createContext from 'create-react-context'\r\n\r\nimport { Context as PageAndMenuContext } from './PageAndMenu'\r\nimport OnFocusOut from './OnFocusOut'\r\n\r\nexport const Context = createContext()\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class ContextAwareSlideoutMenu extends PureComponent {\r\n\tslideOutMenu = createRef()\r\n\tshow = () => this.slideOutMenu.current.show()\r\n\thide = () => this.slideOutMenu.current.hide()\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PageAndMenuContext.Consumer>\r\n\t\t\t\t{context => (\r\n\t\t\t\t\t<SlideoutMenu\r\n\t\t\t\t\t\tref={this.slideOutMenu}\r\n\t\t\t\t\t\t{...this.props}\r\n\t\t\t\t\t\tregisterMenu={context.registerMenu}\r\n\t\t\t\t\t\ttoggleMenu={context.toggleMenu}\r\n\t\t\t\t\t\tgetTogglerNode={context.getTogglerNode}/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</PageAndMenuContext.Consumer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// const ContextAwareSlideoutMenu = (props) => (\r\n// \t<PageAndMenuContext.Consumer>\r\n// \t\t{context => (\r\n// \t\t\t<SlideoutMenu\r\n// \t\t\t\t{...props}\r\n// \t\t\t\tregisterMenu={context.registerMenu}\r\n// \t\t\t\ttoggleMenu={context.toggleMenu}/>\r\n// \t\t\t)\r\n// \t\t}\r\n// \t</PageAndMenuContext.Consumer>\r\n// )\r\n\r\n// export default ContextAwareSlideoutMenu\r\n\r\n// Swipeable feature example source code:\r\n// https://github.com/mui-org/material-ui/blob/v1-beta/packages/material-ui/src/SwipeableDrawer/SwipeableDrawer.js\r\n\r\n// A slideout menu.\r\nclass SlideoutMenu extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\tanchor : PropTypes.oneOf([\r\n\t\t\t'left',\r\n\t\t\t'right',\r\n\t\t\t'top',\r\n\t\t\t'bottom'\r\n\t\t]).isRequired,\r\n\r\n\t\t// isOpen : PropTypes.bool.isRequired,\r\n\r\n\t\tfullscreen : PropTypes.bool.isRequired,\r\n\r\n\t\t// A result of `React.createRef()`.\r\n\t\t// Will be focused when the menu is opened.\r\n\t\tmenuRef : PropTypes.object,\r\n\r\n\t\tonCollapse : PropTypes.func,\r\n\t\tonExpand : PropTypes.func,\r\n\r\n\t\ttoggleMenu : PropTypes.func.isRequired,\r\n\t\tregisterMenu : PropTypes.func.isRequired,\r\n\t\tgetTogglerNode : PropTypes.func.isRequired,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle : PropTypes.object,\r\n\r\n\t\t// CSS class\r\n\t\tclassName : PropTypes.string\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// isOpen : false,\r\n\t\tanchor : 'left',\r\n\t\tfullscreen : false\r\n\t}\r\n\r\n\tstate = {\r\n\t\t// show: this.props.isOpen\r\n\t\tshow: false\r\n\t}\r\n\r\n\tcontainer = createRef()\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst { registerMenu, menuRef } = this.props\r\n\t\tconst { show } = this.state\r\n\r\n\t\tthis.unregister = registerMenu\r\n\t\t({\r\n\t\t\thide    : () => this.setState({ show: false }),\r\n\t\t\ttoggle  : this.toggle,\r\n\t\t\tisShown : () => this.state.show,\r\n\t\t\telement : () => this.container.current,\r\n\t\t\tmenu    : () => menuRef ? menuRef.current : this.container.current\r\n\t\t})\r\n\r\n\t\t// // Hide on `Back`/`Forward` navigation.\r\n\t\t// window.addEventListener('popstate', this.hide)\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tthis.unregister()\r\n\r\n\t\t// window.removeEventListener('popstate', this.hide)\r\n\t}\r\n\r\n\t// componentDidUpdate(prevProps)\r\n\t// {\r\n\t// \tconst { isOpen } = this.props\r\n\r\n\t// \tif (prevProps.isOpen && !isOpen) {\r\n\t// \t\tthis.hide()\r\n\t// \t} else if (!prevProps.isOpen && isOpen) {\r\n\t// \t\tthis.show()\r\n\t// \t}\r\n\t// }\r\n\r\n\ttoggle = (show, onAfterToggle) => {\r\n\t\tconst { onCollapse, onExpand } = this.props\r\n\t\tif (show === this.state.show) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (show === undefined) {\r\n\t\t\tshow = !this.state.show\r\n\t\t}\r\n\t\tif (show) {\r\n\t\t\tonExpand && onExpand()\r\n\t\t} else {\r\n\t\t\tonCollapse && onCollapse()\r\n\t\t}\r\n\t\tthis.setState({ show }, onAfterToggle)\r\n\t}\r\n\r\n\thide = () =>\r\n\t{\r\n\t\tconst { toggleMenu } = this.props\r\n\t\tconst { show } = this.state\r\n\r\n\t\tif (show) {\r\n\t\t\ttoggleMenu()\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown = (event) => {\r\n\t\tconst { toggleMenu } = this.props\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tswitch (event.keyCode) {\r\n\t\t\t// Collapse on \"Escape\".\r\n\t\t\tcase 27:\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\treturn toggleMenu()\r\n\t\t}\r\n\t}\r\n\r\n\tonBlur = (event) => this.onFocusOutRef.onBlur(event)\r\n\r\n\tstoreOnFocusOutRef = (ref) => this.onFocusOutRef = ref\r\n\tgetContainerNode = () => this.container.current\r\n\r\n\tonFocusOut = () => {\r\n\t\tconst { toggleMenu } = this.props\r\n\t\t// `window.rruiCollapseOnFocusOut` can be used\r\n\t\t// for debugging expandable contents.\r\n\t\tif (window.rruiCollapseOnFocusOut !== false) {\r\n\t\t\ttoggleMenu(false)\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst {\r\n\t\t\tanchor,\r\n\t\t\tfullscreen,\r\n\t\t\tgetTogglerNode,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\t// rest\r\n\t\t\tmenuRef,\r\n\t\t\tonExpand,\r\n\t\t\tonCollapse,\r\n\t\t\ttoggleMenu,\r\n\t\t\tregisterMenu,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\tconst { show } = this.state\r\n\r\n\t\t// ARIA menu notes:\r\n\t\t// https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html\r\n\r\n\t\t// `tabIndex=\"-1\"` is for calling `this.container.current.focus()`\r\n\t\t// when no `menuRef` is supplied.\r\n\r\n\t\tconst element = (\r\n\t\t\t<div\r\n\t\t\t\t{ ...rest }\r\n\t\t\t\tref={ this.container }\r\n\t\t\t\taria-hidden={ !show }\r\n\t\t\t\ttabIndex={ -1 }\r\n\t\t\t\tonBlur={ this.onBlur }\r\n\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\tclassName={ classNames(\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t\t/* Developers can define custom `:focus` style for the slideout menu. */\r\n\t\t\t\t\t/* (or better add `menuRef` property pointing to a component having `.focus()` method). */\r\n\t\t\t\t\t'rrui__outline',\r\n\t\t\t\t\t'rrui__slideout-menu',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__slideout-menu--left'       : anchor === 'left',\r\n\t\t\t\t\t\t'rrui__slideout-menu--right'      : anchor === 'right',\r\n\t\t\t\t\t\t'rrui__slideout-menu--top'        : anchor === 'top',\r\n\t\t\t\t\t\t'rrui__slideout-menu--bottom'     : anchor === 'bottom',\r\n\t\t\t\t\t\t'rrui__slideout-menu--fullscreen' : fullscreen,\r\n\t\t\t\t\t\t'rrui__slideout-menu--expanded'   : show\r\n\t\t\t\t\t}\r\n\t\t\t\t) }>\r\n\t\t\t\t{ children }\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<OnFocusOut\r\n\t\t\t\tref={this.storeOnFocusOutRef}\r\n\t\t\t\tgetContainerNode={this.getContainerNode}\r\n\t\t\t\tgetTogglerNode={getTogglerNode}\r\n\t\t\t\tonFocusOut={this.onFocusOut}>\r\n\t\t\t\t{element}\r\n\t\t\t</OnFocusOut>\r\n\t\t)\r\n\t}\r\n}"]}