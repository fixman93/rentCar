{"version":3,"sources":["../source/PhoneInputReactResponsiveUI.js"],"names":["PhoneInputReactResponsiveUI","storeInputRef","ref","input","focus","props","propTypes","inputClassName","string","saveOnIcons","bool","countrySelectAriaLabel","countrySelectCloseAriaLabel","countrySelectMaxItems","number","defaultProps","countrySelectComponent","countrySelectProperties","COUNTRY_SELECT_PROPERTIES","getInputClassName","disabled","invalid"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;IAEqBA,2B;;;;;;;;;;;;;;8NAoCpBC,a,GAAgB,UAACC,GAAD;AAAA,UAAS,MAAKC,KAAL,GAAaD,GAAtB;AAAA,G,QAShBE,K,GAAQ;AAAA,UAAM,MAAKD,KAAL,CAAWC,KAAX,EAAN;AAAA,G;;;AAnBR;AACA;AACA;AACA;;;;;2BASS;AACR,UACC,+DAAY,KAAK,KAAKH,aAAtB,IAAyC,KAAKI,KAA9C,EADD;AAGA;;AAED;;;;;4BA1COC,S,GACP;AACC;AACA;AACA;AACAC,iBAAiB,oBAAUC,MAJ5B;;AAMC;AACA;AACA;AACAC,cAAc,oBAAUC,IATzB;;AAWC;AACAC,yBAAyB,oBAAUH,MAZpC;;AAcC;AACA;AACA;AACAI,8BAA8B,oBAAUJ,MAjBzC;;AAmBC;AACAK,wBAAwB,oBAAUC,MApBnC,E,SA2BOC,Y,GAAe;AACrBC,iEADqB;AAErBC,0BAAyBC,yBAFJ;AAGrBC;AAHqB,C;kBA9BFnB,2B;;;AAgDrB,IAAMkB,4BACN;AACCX,iBAA+B,gBADhC;AAECE,cAA+B,aAFhC;AAGCE,yBAA+B,WAHhC;AAICC,8BAA+B,gBAJhC;AAKCC,wBAA+B;AALhC,CADA;;AASA,SAASM,iBAAT,QACA;AAAA,KAD6BC,QAC7B,SAD6BA,QAC7B;AAAA,KADuCC,OACvC,SADuCA,OACvC;;AACC,QAAO,0BAEN,aAFM,EAGN,qBAHM,EAIN,mBAJM,EAKN;AACC,gCAAgCA,OADjC;AAEC,iCAAgCD;AAFjC,EALM,CAAP;AAUA","file":"PhoneInputReactResponsiveUI.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport PhoneInput from './PhoneInput'\r\nimport CountrySelect from './CountrySelectReactResponsiveUI'\r\n\r\nexport default class PhoneInputReactResponsiveUI extends Component\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// `<input/>` CSS class.\r\n\t\t// Both for the phone number `<input/>` and\r\n\t\t// the country select autocomplete `<input/>`.\r\n\t\tinputClassName : PropTypes.string,\r\n\r\n\t\t// If set to `false`, then country flags will be shown\r\n\t\t// for all countries when country `<select/>` is expanded.\r\n\t\t// By default shows flag only for currently selected country.\r\n\t\tsaveOnIcons : PropTypes.bool,\r\n\r\n\t\t// `aria-label` for the `<Select/>`'s toggle `<button/>`.\r\n\t\tcountrySelectAriaLabel : PropTypes.string,\r\n\r\n\t\t// `aria-label` for the `<Select/>`'s \"Close\" button\r\n\t\t// (which is an \"x\" visible in fullscreen mode).\r\n\t\t// (not yet implemented but is likely to be).\r\n\t\tcountrySelectCloseAriaLabel : PropTypes.string,\r\n\r\n\t\t// Defines the height (in items) of the expanded country `<select/>`.\r\n\t\tcountrySelectMaxItems : PropTypes.number\r\n\t}\r\n\r\n\t// These two country-select-related properties are\r\n\t// implemented as `defaultProps` instead of passing them\r\n\t// directly to the `<PhoneInput/>` analogous to how it's\r\n\t// implemented in `<PhoneInputNative/>` (see `./PhoneInputNative.js` notes).\r\n\tstatic defaultProps = {\r\n\t\tcountrySelectComponent: CountrySelect,\r\n\t\tcountrySelectProperties: COUNTRY_SELECT_PROPERTIES,\r\n\t\tgetInputClassName\r\n\t}\r\n\r\n\tstoreInputRef = (ref) => this.input = ref\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PhoneInput ref={this.storeInputRef} {...this.props}/>\r\n\t\t)\r\n\t}\r\n\r\n\t// Proxy `.focus()` method.\r\n\tfocus = () => this.input.focus()\r\n}\r\n\r\nconst COUNTRY_SELECT_PROPERTIES =\r\n{\r\n\tinputClassName               : 'inputClassName',\r\n\tsaveOnIcons                  : 'saveOnIcons',\r\n\tcountrySelectAriaLabel       : 'ariaLabel',\r\n\tcountrySelectCloseAriaLabel  : 'closeAriaLabel',\r\n\tcountrySelectMaxItems        : 'maxItems'\r\n}\r\n\r\nfunction getInputClassName({ disabled, invalid })\r\n{\r\n\treturn classNames\r\n\t(\r\n\t\t'rrui__input',\r\n\t\t'rrui__input-element',\r\n\t\t'rrui__input-field',\r\n\t\t{\r\n\t\t\t'rrui__input-field--invalid'  : invalid,\r\n\t\t\t'rrui__input-field--disabled' : disabled\r\n\t\t}\r\n\t)\r\n}"]}