{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CountrySelectNative = (_temp2 = _class = function (_Component) {\n  _inherits(CountrySelectNative, _Component);\n\n  function CountrySelectNative() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CountrySelectNative);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CountrySelectNative.__proto__ || Object.getPrototypeOf(CountrySelectNative)).call.apply(_ref, [this].concat(args))), _this), _this.onChange = function (event) {\n      var onChange = _this.props.onChange;\n      var value = event.target.value;\n      onChange(value === 'ZZ' ? undefined : value);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CountrySelectNative, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          value = _props.value,\n          options = _props.options,\n          onFocus = _props.onFocus,\n          onBlur = _props.onBlur,\n          disabled = _props.disabled,\n          tabIndex = _props.tabIndex,\n          className = _props.className,\n          SelectArrow = _props.selectArrowComponent;\n      var selectedOption = void 0;\n\n      for (var _iterator = options, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var option = _ref2;\n\n        if (!option.divider && option.value === value) {\n          selectedOption = option;\n        }\n      }\n\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)(className, 'react-phone-number-input__country--native')\n      }, selectedOption && _react2.default.createElement(selectedOption.icon, {\n        value: value\n      }), _react2.default.createElement('select', {\n        name: name,\n        value: value || 'ZZ',\n        onChange: this.onChange,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        disabled: disabled,\n        tabIndex: tabIndex,\n        'aria-label': this.props['aria-label'],\n        className: 'react-phone-number-input__country-select'\n      }, options.map(function (_ref3) {\n        var value = _ref3.value,\n            label = _ref3.label,\n            divider = _ref3.divider;\n        return _react2.default.createElement('option', {\n          key: divider ? '|' : value || 'ZZ',\n          value: divider ? '|' : value || 'ZZ',\n          disabled: divider ? true : false,\n          className: divider ? 'react-phone-number-input__country-select-divider' : undefined\n        }, label);\n      })), _react2.default.createElement(SelectArrow, null));\n    }\n  }]);\n\n  return CountrySelectNative;\n}(_react.Component), _class.propTypes = {\n  // A two-letter country code.\n  // E.g. \"US\", \"RU\", etc.\n  value: _propTypes2.default.string,\n  // Updates the `value`.\n  onChange: _propTypes2.default.func.isRequired,\n  // `<select/>` options.\n  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    value: _propTypes2.default.string,\n    label: _propTypes2.default.string,\n    divider: _propTypes2.default.bool\n  })).isRequired,\n  // HTML `name` attribute.\n  name: _propTypes2.default.string,\n  // HTML `disabled` attribute.\n  disabled: _propTypes2.default.bool,\n  // HTML `tabIndex` attribute.\n  tabIndex: _propTypes2.default.number,\n  // Select arrow component.\n  selectArrowComponent: _propTypes2.default.elementType.isRequired,\n  // Toggles the `--focus` CSS class.\n  // https://github.com/catamphetamine/react-phone-number-input/issues/189\n  onFocus: _propTypes2.default.func,\n  // Toggles the `--focus` CSS class.\n  // https://github.com/catamphetamine/react-phone-number-input/issues/189\n  onBlur: _propTypes2.default.func\n}, _class.defaultProps = {\n  selectArrowComponent: function selectArrowComponent() {\n    return _react2.default.createElement('div', {\n      className: 'react-phone-number-input__country-select-arrow'\n    });\n  }\n}, _temp2);\nexports.default = CountrySelectNative;","map":null,"metadata":{},"sourceType":"script"}