// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lastAddedItem render lastAddedItem 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LastAddedItem
    project={
      Object {
        "Currency": 20,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        null,
        null,
        <div
          className="vihicle-price"
        >
          <div
            className="currency"
          >
            20
          </div>
          <span>
            per day
          </span>
        </div>,
      ],
      "className": "last-added-item",
    },
    "ref": null,
    "rendered": Array [
      null,
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="currency"
            >
              20
            </div>,
            null,
            <span>
              per day
            </span>,
          ],
          "className": "vihicle-price",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 20,
              "className": "currency",
            },
            "ref": null,
            "rendered": 20,
            "type": "div",
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "per day",
            },
            "ref": null,
            "rendered": "per day",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          null,
          null,
          <div
            className="vihicle-price"
          >
            <div
              className="currency"
            >
              20
            </div>
            <span>
              per day
            </span>
          </div>,
        ],
        "className": "last-added-item",
      },
      "ref": null,
      "rendered": Array [
        null,
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="currency"
              >
                20
              </div>,
              null,
              <span>
                per day
              </span>,
            ],
            "className": "vihicle-price",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 20,
                "className": "currency",
              },
              "ref": null,
              "rendered": 20,
              "type": "div",
            },
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "per day",
              },
              "ref": null,
              "rendered": "per day",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
