// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Homepage render homepage 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Homepage || take-vehicle
          </title>
          <meta
            content="Car, Renta, Rentacar, Rent a car, find car"
            name="keywords"
          />
          <meta
            content="Rent a car to enjoy on your drive"
            name="description"
          />
        </HelmetWrapper>,
        <section
          className="home-hero"
          style={
            Object {
              "backgroundImage": "url(home-hero.jpg)",
            }
          }
        >
          <div
            className="content"
          >
            <h1>
              Find the Best Car
            </h1>
            <p>
              Book unforgettable cars from local hosts around the world
            </p>
            <ForwardRef
              as="form"
              inline={false}
            >
              <ForwardRef
                as="div"
              >
                <ForwardRef
                  column={false}
                  srOnly={false}
                >
                  Where
                </ForwardRef>
                <StateManager
                  className="search-cities"
                  defaultInputValue=""
                  defaultMenuIsOpen={false}
                  defaultValue={null}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "value": "empty",
                      },
                    ]
                  }
                  value={null}
                />
                <span
                  className="empty-link"
                >
                  <img
                    alt="Search"
                    src="search_glass@2x.png"
                  />
                </span>
              </ForwardRef>
            </ForwardRef>
          </div>
        </section>,
        <LastAdded
          homebg={
            Object {
              "backgroundImage": "url(home_bg.png)",
            }
          }
        />,
        <WhyChooseUs />,
      ],
      "className": "home-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <title>
              Homepage || take-vehicle
            </title>,
            <meta
              content="Car, Renta, Rentacar, Rent a car, find car"
              name="keywords"
            />,
            <meta
              content="Rent a car to enjoy on your drive"
              name="description"
            />,
          ],
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Homepage || take-vehicle",
            },
            "ref": null,
            "rendered": "Homepage || take-vehicle",
            "type": "title",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Car, Renta, Rentacar, Rent a car, find car",
              "name": "keywords",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "Rent a car to enjoy on your drive",
              "name": "description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="content"
          >
            <h1>
              Find the Best Car
            </h1>
            <p>
              Book unforgettable cars from local hosts around the world
            </p>
            <ForwardRef
              as="form"
              inline={false}
            >
              <ForwardRef
                as="div"
              >
                <ForwardRef
                  column={false}
                  srOnly={false}
                >
                  Where
                </ForwardRef>
                <StateManager
                  className="search-cities"
                  defaultInputValue=""
                  defaultMenuIsOpen={false}
                  defaultValue={null}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "value": "empty",
                      },
                    ]
                  }
                  value={null}
                />
                <span
                  className="empty-link"
                >
                  <img
                    alt="Search"
                    src="search_glass@2x.png"
                  />
                </span>
              </ForwardRef>
            </ForwardRef>
          </div>,
          "className": "home-hero",
          "style": Object {
            "backgroundImage": "url(home-hero.jpg)",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Find the Best Car
              </h1>,
              <p>
                Book unforgettable cars from local hosts around the world
              </p>,
              <ForwardRef
                as="form"
                inline={false}
              >
                <ForwardRef
                  as="div"
                >
                  <ForwardRef
                    column={false}
                    srOnly={false}
                  >
                    Where
                  </ForwardRef>
                  <StateManager
                    className="search-cities"
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "value": "empty",
                        },
                      ]
                    }
                    value={null}
                  />
                  <span
                    className="empty-link"
                  >
                    <img
                      alt="Search"
                      src="search_glass@2x.png"
                    />
                  </span>
                </ForwardRef>
              </ForwardRef>,
            ],
            "className": "content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Find the Best Car",
              },
              "ref": null,
              "rendered": "Find the Best Car",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Book unforgettable cars from local hosts around the world",
              },
              "ref": null,
              "rendered": "Book unforgettable cars from local hosts around the world",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "form",
                "children": <ForwardRef
                  as="div"
                >
                  <ForwardRef
                    column={false}
                    srOnly={false}
                  >
                    Where
                  </ForwardRef>
                  <StateManager
                    className="search-cities"
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "value": "empty",
                        },
                      ]
                    }
                    value={null}
                  />
                  <span
                    className="empty-link"
                  >
                    <img
                      alt="Search"
                      src="search_glass@2x.png"
                    />
                  </span>
                </ForwardRef>,
                "inline": false,
                "onSubmit": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "div",
                  "children": Array [
                    <ForwardRef
                      column={false}
                      srOnly={false}
                    >
                      Where
                    </ForwardRef>,
                    <StateManager
                      className="search-cities"
                      defaultInputValue=""
                      defaultMenuIsOpen={false}
                      defaultValue={null}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "value": "empty",
                          },
                        ]
                      }
                      value={null}
                    />,
                    <span
                      className="empty-link"
                    >
                      <img
                        alt="Search"
                        src="search_glass@2x.png"
                      />
                    </span>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Where",
                      "column": false,
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Where",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "column": false,
                        "srOnly": false,
                      },
                      "displayName": "FormLabel",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "search-cities",
                      "defaultInputValue": "",
                      "defaultMenuIsOpen": false,
                      "defaultValue": null,
                      "onChange": [Function],
                      "options": Array [
                        Object {
                          "value": "empty",
                        },
                      ],
                      "value": null,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="Search"
                        src="search_glass@2x.png"
                      />,
                      "className": "empty-link",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "Search",
                        "src": "search_glass@2x.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "span",
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "as": "div",
                  },
                  "displayName": "FormGroup",
                  "render": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "Check": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Input": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "type": "checkbox",
                    },
                    "displayName": "FormCheckInput",
                    "render": [Function],
                  },
                  "Label": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "type": "checkbox",
                    },
                    "displayName": "FormCheckLabel",
                    "render": [Function],
                  },
                  "defaultProps": Object {
                    "disabled": false,
                    "inline": false,
                    "isInvalid": false,
                    "isValid": false,
                    "title": "",
                    "type": "checkbox",
                  },
                  "displayName": "FormCheck",
                  "render": [Function],
                },
                "Control": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Feedback": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                      "type": "valid",
                    },
                    "displayName": "Feedback",
                    "propTypes": Object {
                      "as": [Function],
                      "type": [Function],
                    },
                    "render": [Function],
                  },
                  "defaultProps": Object {
                    "as": "input",
                  },
                  "displayName": "FormControl",
                  "render": [Function],
                },
                "Group": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "as": "div",
                  },
                  "displayName": "FormGroup",
                  "render": [Function],
                },
                "Label": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "column": false,
                    "srOnly": false,
                  },
                  "displayName": "FormLabel",
                  "render": [Function],
                },
                "Row": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "displayName": "FormRow",
                  "render": [Function],
                },
                "Text": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "as": "small",
                  },
                  "displayName": "FormText",
                  "render": [Function],
                },
                "defaultProps": Object {
                  "as": "form",
                  "inline": false,
                },
                "displayName": "Form",
                "render": [Function],
              },
            },
          ],
          "type": "div",
        },
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "homebg": Object {
            "backgroundImage": "url(home_bg.png)",
          },
          "projects": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Homepage || take-vehicle
            </title>
            <meta
              content="Car, Renta, Rentacar, Rent a car, find car"
              name="keywords"
            />
            <meta
              content="Rent a car to enjoy on your drive"
              name="description"
            />
          </HelmetWrapper>,
          <section
            className="home-hero"
            style={
              Object {
                "backgroundImage": "url(home-hero.jpg)",
              }
            }
          >
            <div
              className="content"
            >
              <h1>
                Find the Best Car
              </h1>
              <p>
                Book unforgettable cars from local hosts around the world
              </p>
              <ForwardRef
                as="form"
                inline={false}
              >
                <ForwardRef
                  as="div"
                >
                  <ForwardRef
                    column={false}
                    srOnly={false}
                  >
                    Where
                  </ForwardRef>
                  <StateManager
                    className="search-cities"
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "value": "empty",
                        },
                      ]
                    }
                    value={null}
                  />
                  <span
                    className="empty-link"
                  >
                    <img
                      alt="Search"
                      src="search_glass@2x.png"
                    />
                  </span>
                </ForwardRef>
              </ForwardRef>
            </div>
          </section>,
          <LastAdded
            homebg={
              Object {
                "backgroundImage": "url(home_bg.png)",
              }
            }
          />,
          <WhyChooseUs />,
        ],
        "className": "home-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <title>
                Homepage || take-vehicle
              </title>,
              <meta
                content="Car, Renta, Rentacar, Rent a car, find car"
                name="keywords"
              />,
              <meta
                content="Rent a car to enjoy on your drive"
                name="description"
              />,
            ],
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Homepage || take-vehicle",
              },
              "ref": null,
              "rendered": "Homepage || take-vehicle",
              "type": "title",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Car, Renta, Rentacar, Rent a car, find car",
                "name": "keywords",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "Rent a car to enjoy on your drive",
                "name": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="content"
            >
              <h1>
                Find the Best Car
              </h1>
              <p>
                Book unforgettable cars from local hosts around the world
              </p>
              <ForwardRef
                as="form"
                inline={false}
              >
                <ForwardRef
                  as="div"
                >
                  <ForwardRef
                    column={false}
                    srOnly={false}
                  >
                    Where
                  </ForwardRef>
                  <StateManager
                    className="search-cities"
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "value": "empty",
                        },
                      ]
                    }
                    value={null}
                  />
                  <span
                    className="empty-link"
                  >
                    <img
                      alt="Search"
                      src="search_glass@2x.png"
                    />
                  </span>
                </ForwardRef>
              </ForwardRef>
            </div>,
            "className": "home-hero",
            "style": Object {
              "backgroundImage": "url(home-hero.jpg)",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Find the Best Car
                </h1>,
                <p>
                  Book unforgettable cars from local hosts around the world
                </p>,
                <ForwardRef
                  as="form"
                  inline={false}
                >
                  <ForwardRef
                    as="div"
                  >
                    <ForwardRef
                      column={false}
                      srOnly={false}
                    >
                      Where
                    </ForwardRef>
                    <StateManager
                      className="search-cities"
                      defaultInputValue=""
                      defaultMenuIsOpen={false}
                      defaultValue={null}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "value": "empty",
                          },
                        ]
                      }
                      value={null}
                    />
                    <span
                      className="empty-link"
                    >
                      <img
                        alt="Search"
                        src="search_glass@2x.png"
                      />
                    </span>
                  </ForwardRef>
                </ForwardRef>,
              ],
              "className": "content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Find the Best Car",
                },
                "ref": null,
                "rendered": "Find the Best Car",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Book unforgettable cars from local hosts around the world",
                },
                "ref": null,
                "rendered": "Book unforgettable cars from local hosts around the world",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "form",
                  "children": <ForwardRef
                    as="div"
                  >
                    <ForwardRef
                      column={false}
                      srOnly={false}
                    >
                      Where
                    </ForwardRef>
                    <StateManager
                      className="search-cities"
                      defaultInputValue=""
                      defaultMenuIsOpen={false}
                      defaultValue={null}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "value": "empty",
                          },
                        ]
                      }
                      value={null}
                    />
                    <span
                      className="empty-link"
                    >
                      <img
                        alt="Search"
                        src="search_glass@2x.png"
                      />
                    </span>
                  </ForwardRef>,
                  "inline": false,
                  "onSubmit": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "div",
                    "children": Array [
                      <ForwardRef
                        column={false}
                        srOnly={false}
                      >
                        Where
                      </ForwardRef>,
                      <StateManager
                        className="search-cities"
                        defaultInputValue=""
                        defaultMenuIsOpen={false}
                        defaultValue={null}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "value": "empty",
                            },
                          ]
                        }
                        value={null}
                      />,
                      <span
                        className="empty-link"
                      >
                        <img
                          alt="Search"
                          src="search_glass@2x.png"
                        />
                      </span>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Where",
                        "column": false,
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Where",
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "column": false,
                          "srOnly": false,
                        },
                        "displayName": "FormLabel",
                        "render": [Function],
                      },
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "search-cities",
                        "defaultInputValue": "",
                        "defaultMenuIsOpen": false,
                        "defaultValue": null,
                        "onChange": [Function],
                        "options": Array [
                          Object {
                            "value": "empty",
                          },
                        ],
                        "value": null,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt="Search"
                          src="search_glass@2x.png"
                        />,
                        "className": "empty-link",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "Search",
                          "src": "search_glass@2x.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "span",
                    },
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                    },
                    "displayName": "FormGroup",
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Check": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Input": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "type": "checkbox",
                      },
                      "displayName": "FormCheckInput",
                      "render": [Function],
                    },
                    "Label": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "type": "checkbox",
                      },
                      "displayName": "FormCheckLabel",
                      "render": [Function],
                    },
                    "defaultProps": Object {
                      "disabled": false,
                      "inline": false,
                      "isInvalid": false,
                      "isValid": false,
                      "title": "",
                      "type": "checkbox",
                    },
                    "displayName": "FormCheck",
                    "render": [Function],
                  },
                  "Control": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Feedback": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "as": "div",
                        "type": "valid",
                      },
                      "displayName": "Feedback",
                      "propTypes": Object {
                        "as": [Function],
                        "type": [Function],
                      },
                      "render": [Function],
                    },
                    "defaultProps": Object {
                      "as": "input",
                    },
                    "displayName": "FormControl",
                    "render": [Function],
                  },
                  "Group": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "div",
                    },
                    "displayName": "FormGroup",
                    "render": [Function],
                  },
                  "Label": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "column": false,
                      "srOnly": false,
                    },
                    "displayName": "FormLabel",
                    "render": [Function],
                  },
                  "Row": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "displayName": "FormRow",
                    "render": [Function],
                  },
                  "Text": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "as": "small",
                    },
                    "displayName": "FormText",
                    "render": [Function],
                  },
                  "defaultProps": Object {
                    "as": "form",
                    "inline": false,
                  },
                  "displayName": "Form",
                  "render": [Function],
                },
              },
            ],
            "type": "div",
          },
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "homebg": Object {
              "backgroundImage": "url(home_bg.png)",
            },
            "projects": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
